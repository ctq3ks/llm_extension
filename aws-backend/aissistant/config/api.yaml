openapi: "3.0.1"
info:
  title: 
    Fn::Sub: ${AWS::StackName}-AissistantApi
  version: "2023-02-17 23:59:59UTC"
paths:
  /postChatGPT:
    post:
      security:
      - AissistantAuthorizer:
        - Fn::Sub: "${AissistantPoolResourceServer}/aissistant.scope"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri: 
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${PostChatGPTFunction}/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
            Access-Control-Max-Age:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'1800'"
              method.response.header.Access-Control-Allow-Methods: "'GET, POST, OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
components:
  securitySchemes:
    AissistantAuthorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
      x-amazon-apigateway-authorizer:
        providerARNs:
        - Fn::GetAtt: AissistantPool.Arn
        type: "cognito_user_pools"
x-amazon-apigateway-importexport-version: "1.0"
